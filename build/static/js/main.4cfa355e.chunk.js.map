{"version":3,"sources":["Components/buttonBlock/ButtonBlock.js","Components/notification/Notification.js","Components/section/Section.js","Components/statistics/Statistics.js","Components/App.js","index.js","Components/buttonBlock/ButtonBlock.module.css","Components/notification/Notification.module.css"],"names":["ButtonBlock","addFeedback","options","map","option","type","className","style","button","name","onClick","Notification","message","Section","title","children","Statistics","good","neutral","bad","total","percentage","App","useState","setGood","setNeutral","setBad","calcFeedbackSumm","e","target","state","Math","round","calcFeedbackPercentage","ReactDOM","render","document","getElementById","module","exports"],"mappings":"yNAqBeA,EAlBK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAClC,OACE,mCACGA,EAAQC,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,UAAWC,IAAMC,OACjBC,KAAML,EACNM,QAAST,EALX,SAOGG,GANIA,S,gBCQAO,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGN,UAAWC,IAAMK,QAApB,SAA8BA,OCSrBC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCgBQC,EApBI,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAC/C,OACE,qCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,oDAAuBC,EAAvB,WC8GSC,EAlHH,WACV,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAuBMC,EAAmB,kBAAMV,EAAOC,EAAUC,GAOhD,OACE,qCACE,cAAC,EAAD,CAASL,MAAM,6BAAf,SACE,cAAC,EAAD,CACEb,YAhCY,SAAC2B,GAGnB,OAFiBA,EAAEC,OAAXpB,MAGN,IAAK,OACHe,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MAEF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MAEF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,KAC1B,MAEF,QACE,SAgBE5B,QAAS,CAAC,OAAQ,UAAW,WAG/ByB,IAGA,cAAC,EAAD,CAASb,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,WAvBqB,WAC7B,IAAMD,EAAQO,IACRN,EAAaD,EAASH,EAAOG,EAAS,IAAM,EAClD,OAAOW,KAAKC,MAAMX,GAoBEY,OARhB,cAAC,EAAD,CAAcrB,QAAQ,0BC5C9BsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjDC,EAAOC,QAAU,CAAC,OAAS,8B,kBCA3BD,EAAOC,QAAU,CAAC,QAAU,iC","file":"static/js/main.4cfa355e.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./ButtonBlock.module.css\";\n\nconst ButtonBlock = ({ addFeedback, options }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          className={style.button}\n          name={option}\n          onClick={addFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nexport default ButtonBlock;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className={style.message}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, percentage }) => {\n  return (\n    <>\n      <p>Good:{good}</p>\n      <p>Neutral:{neutral}</p>\n      <p>Bad:{bad}</p>\n      <p>Total:{total}</p>\n      <p>Positive feedbacks:{percentage}%</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import { useState } from \"react\";\nimport ButtonBlock from \"./buttonBlock/ButtonBlock\";\nimport Notification from \"./notification/Notification\";\nimport Section from \"./section/Section\";\nimport Statistics from \"./statistics/Statistics\";\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (e) => {\n    const { name } = e.target;\n\n    switch (name) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const calcFeedbackSumm = () => good + neutral + bad;\n  const calcFeedbackPercentage = () => {\n    const total = calcFeedbackSumm();\n    const percentage = total ? (good / total) * 100 : 0;\n    return Math.round(percentage);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave your feedback\">\n        <ButtonBlock\n          addFeedback={addFeedback}\n          options={[\"good\", \"neutral\", \"bad\"]}\n        />\n      </Section>\n      {!calcFeedbackSumm() ? (\n        <Notification message=\"No feedback given\" />\n      ) : (\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={calcFeedbackSumm()}\n            percentage={calcFeedbackPercentage()}\n          />\n        </Section>\n      )}\n    </>\n  );\n};\n\n// class App extends Component {\n//   state = {\n//     good: 0,\n//     neutral: 0,\n//     bad: 0,\n//   };\n\n//  addFeedback = (e) => {\n//     const name = e.target.name;\n//     setState((prev) => ({ [name]: prev[name] + 1 }));\n//   };\n\n//   calcFeedbackSumm = () => {\n//     const { good, neutral, bad } = state;\n//     const summ = good + neutral + bad;\n//     return summ;\n//   };\n\n//   calcFeedbackPercentage = () => {\n//     const total = calcFeedbackSumm();\n//     const { good } = state;\n//     const percentage = total ? (good / total) * 100 : 0;\n//     return Math.round(percentage);\n//   };\n\n//   render() {\n//     const { good, neutral, bad } = state;\n//     const total = calcFeedbackSumm();\n//     const percentage = calcFeedbackPercentage();\n//     const { addFeedback } = this;\n//     return (\n//       <>\n//         <Section title=\"Please leave your feedback\">\n//           <ButtonBlock\n//             addFeedback={addFeedback}\n//             options={[\"good\", \"neutral\", \"bad\"]}\n//           />\n//         </Section>\n//         {total === 0 ? (\n//           <Notification message=\"No feedback given\" />\n//         ) : (\n//           <Section title=\"Statistics\">\n//             <Statistics\n//               good={good}\n//               neutral={neutral}\n//               bad={bad}\n//               total={total}\n//               percentage={percentage}\n//             />\n//           </Section>\n//         )}\n//       </>\n//     );\n//   }\n// }\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ButtonBlock_button__wTZxh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3_A99\"};"],"sourceRoot":""}